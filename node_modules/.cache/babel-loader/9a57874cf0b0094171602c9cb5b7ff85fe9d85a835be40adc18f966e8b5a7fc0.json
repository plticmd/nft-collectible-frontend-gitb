{"ast":null,"code":"var _jsxFileName = \"/Users/007/DEV/Unchain/Polygon-Generative-NFT/Polygon-Generative-NFT/nft-collectible-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport contract from \"./contracts/NFTCollectible.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst contractAddress = \"0x9068484a45DE3e31d785302Ac8AFe2eFeb50b815\";\nconst abi = contract.abi;\nfunction App() {\n  _s();\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const checkWalletIsConnected = async () => {\n    const {\n      ethereum\n    } = window;\n    if (!ethereum) {\n      console.log(\"Make sure you have MetaMask installed!\");\n      return;\n    } else {\n      console.log(\"Wallet exists! We're ready to go!\");\n    }\n  };\n  const connectWalletHandler = async () => {\n    const {\n      ethereum\n    } = window;\n    if (!ethereum) {\n      alert(\"Please install MetaMask!\");\n    }\n    try {\n      const accounts = await ethereum.request({\n        method: \"eth_requestAccounts\"\n      });\n      console.log(\"Found an account! Address: \", accounts[0]);\n      setCurrentAccount(accounts[0]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  const mintNftHandler = () => {};\n  const connectWalletButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWalletHandler,\n      className: \"cta-button connect-wallet-button\",\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  };\n  const mintNftButton = () => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: mintNftHandler,\n      className: \"cta-button mint-nft-button\",\n      children: \"Mint NFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  };\n  useEffect(() => {\n    checkWalletIsConnected();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Scrappy Squirrels Tutorial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: connectWalletButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"vg9h9hqTAVJVjklrPXRRIAqzLN0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","contract","contractAddress","abi","App","currentAccount","setCurrentAccount","checkWalletIsConnected","ethereum","window","console","log","connectWalletHandler","alert","accounts","request","method","err","mintNftHandler","connectWalletButton","mintNftButton"],"sources":["/Users/007/DEV/Unchain/Polygon-Generative-NFT/Polygon-Generative-NFT/nft-collectible-frontend/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport contract from \"./contracts/NFTCollectible.json\";\n\nconst contractAddress =\n  \"0x9068484a45DE3e31d785302Ac8AFe2eFeb50b815\";\nconst abi = contract.abi;\n\nfunction App() {\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const checkWalletIsConnected = async () => {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      console.log(\"Make sure you have MetaMask installed!\");\n      return;\n    } else {\n      console.log(\"Wallet exists! We're ready to go!\");\n    }\n  };\n\n  const connectWalletHandler = async () => {\n    const { ethereum } = window;\n\n  if (!ethereum) {\n    alert(\"Please install MetaMask!\");\n  }\n\n  try {\n    const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n    console.log(\"Found an account! Address: \", accounts[0]);\n    setCurrentAccount(accounts[0]);\n  } catch (err) {\n    console.log(err);\n  }\n  };\n\n  const mintNftHandler = () => {};\n\n  const connectWalletButton = () => {\n    return (\n      <button\n        onClick={connectWalletHandler}\n        className=\"cta-button connect-wallet-button\"\n      >\n        Connect Wallet\n      </button>\n    );\n  };\n\n  const mintNftButton = () => {\n    return (\n      <button onClick={mintNftHandler} className=\"cta-button mint-nft-button\">\n        Mint NFT\n      </button>\n    );\n  };\n\n  useEffect(() => {\n    checkWalletIsConnected();\n  }, []);\n\n  return (\n    <div className=\"main-app\">\n      <h1>Scrappy Squirrels Tutorial</h1>\n      <div>{connectWalletButton()}</div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,iCAAiC;AAAC;AAEvD,MAAMC,eAAe,GACnB,4CAA4C;AAC9C,MAAMC,GAAG,GAAGF,QAAQ,CAACE,GAAG;AAExB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAMO,sBAAsB,GAAG,YAAY;IACzC,MAAM;MAAEC;IAAS,CAAC,GAAGC,MAAM;IAE3B,IAAI,CAACD,QAAQ,EAAE;MACbE,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;MACrD;IACF,CAAC,MAAM;MACLD,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;IAClD;EACF,CAAC;EAED,MAAMC,oBAAoB,GAAG,YAAY;IACvC,MAAM;MAAEJ;IAAS,CAAC,GAAGC,MAAM;IAE7B,IAAI,CAACD,QAAQ,EAAE;MACbK,KAAK,CAAC,0BAA0B,CAAC;IACnC;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAACO,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MAC1EN,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEG,QAAQ,CAAC,CAAC,CAAC,CAAC;MACvDR,iBAAiB,CAACQ,QAAQ,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;IAClB;EACA,CAAC;EAED,MAAMC,cAAc,GAAG,MAAM,CAAC,CAAC;EAE/B,MAAMC,mBAAmB,GAAG,MAAM;IAChC,oBACE;MACE,OAAO,EAAEP,oBAAqB;MAC9B,SAAS,EAAC,kCAAkC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAGrC;EAEb,CAAC;EAED,MAAMQ,aAAa,GAAG,MAAM;IAC1B,oBACE;MAAQ,OAAO,EAAEF,cAAe;MAAC,SAAS,EAAC,4BAA4B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAE9D;EAEb,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACdQ,sBAAsB,EAAE;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,UAAU;IAAA,wBACvB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmC,eACnC;MAAA,UAAMY,mBAAmB;IAAE;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA;IAAA;IAAA;IAAA;EAAA,QAC9B;AAEV;AAAC,GA5DQf,GAAG;AAAA,KAAHA,GAAG;AA8DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}